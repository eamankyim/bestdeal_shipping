name: Deploy to Production

on:
  push:
    branches: [ production ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script_stop: true
          envs: DB_PASSWORD,JWT_SECRET,JWT_REFRESH_SECRET,CORS_ORIGINS
          script: |
            set -e
            cd /root/bestdeal_shipping
            git fetch origin
            git checkout production
            git reset --hard origin/production
            git clean -fd
            : > .env
            echo "DB_PASSWORD=$DB_PASSWORD" >> .env
            echo "JWT_SECRET=$JWT_SECRET" >> .env
            echo "JWT_REFRESH_SECRET=$JWT_REFRESH_SECRET" >> .env
            echo "REACT_APP_API_URL=http://localhost:5000" >> .env
            echo "CORS_ORIGINS=$CORS_ORIGINS" >> .env
            docker-compose -f docker-compose.prod.yml down --remove-orphans || true
            docker system prune -af || true
            docker-compose -f docker-compose.prod.yml build --no-cache --pull
            docker-compose -f docker-compose.prod.yml up -d
            sleep 25
            docker-compose -f docker-compose.prod.yml exec -T backend npx prisma db push
            docker-compose -f docker-compose.prod.yml ps